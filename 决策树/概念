麦子学院视频+西瓜书推导+b站视频资源

1. 什么是决策树/判定树（decision tree)?
 判定树是一个类似于流程图的树结构：其中，每个内部结点表示在一个属性上的测试，每个分支代表一个属性输出，而每个树叶结点代表类或类分布。树的最顶层是根结点。
 注：叶节点代表最终的结果（label），根结点代表对应的属性（划分）
 
2.如何创建决策树？
  2.1熵（entropy）
     熵是度量样本集合纯度最常用的一种指标，代表一个系统中蕴含多少信息量，信息量越大表明一个系统不确定性就越大，就存在越多的可能性.(西瓜书p75)
     注：变量的不确定性越大，熵越大。
  2.2如何选择根结点?
     使用决策树归纳算法ID3（西瓜书（P75））
     信息获取量(Information Gain)：Gain(A) = Info(D) - Infor_A(D)，通过A来作为节点分类获取了多少信息。
     大致步骤：1.根据label，计算根结点信息熵。
              2.分别对所有属性计算对应的信息熵，选择最大的作为次节点。
              3.循环计算...（西瓜书P77）
 算法：
      树以代表训练样本的单个结点开始（步骤1）。
      如果样本都在同一个类，则该结点成为树叶，并用该类标号（步骤2 和3）。
      否则，算法使用称为信息增益的基于熵的度量作为启发信息，选择能够最好地将样本分类的属性（步骤6）。该属性成为该结点的“测试”或“判定”属性（步骤7）。在算法的该版本中，
      所有的属性都是分类的，即离散值。连续属性必须离散化。
      对测试属性的每个已知的值，创建一个分枝，并据此划分样本（步骤8-10）。
      算法使用同样的过程，递归地形成每个划分上的样本判定树。一旦一个属性出现在一个结点上，就不必该结点的任何后代上考虑它（步骤13）。
      递归划分步骤仅当下列条件之一成立停止：
      (a) 给定结点的所有样本属于同一类（步骤2 和3）。
      (b) 没有剩余属性可以用来进一步划分样本（步骤4）。在此情况下，使用多数表决（步骤5）。
          这涉及将给定的结点转换成树叶，并用样本中的多数所在的类标记它。替换地，可以存放结点样本的类分布。
      (c) 分枝
      test_attribute = a i 没有样本（步骤11）。在这种情况下，以 samples 中的多数类
      创建一个树叶（步骤12）
      
 3.树剪枝：（避免过拟合）
   3.1 先剪枝
   3.2 后剪枝
   注：（2019-4-6未实际使用，实际用到做补充）
   
 4.决策树的优点：
   直观，便于理解，小规模数据集有效 
   
 5.决策树缺点：
   处理连续变量不好（根据阈值离散化）
   类别较多时，错误增加的比较快
   可规模性一般


     
